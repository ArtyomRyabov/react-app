{"version":3,"sources":["components/LoginPasswordForm.js","components/ChosePaymentType.js","components/PersonalDataForm.js","components/ProgressBar.js","App.js","serviceWorker.js","index.js"],"names":["LoginPasswordForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","usernameChange","bind","assertThisInitialized","passwordChange","onBlurUsername","onBlurPassword","handleSubmit","event","setState","target","value","preventDefault","stopPropagation","length","alert","onChange","react_default","a","createElement","className","onSubmit","type","onBlur","React","Component","ChosePaymentType","paymentType","cash","card","cashInputChange","cardInputChange","name","checked","id","htmlFor","PersonalDataForm","firstName","lastName","age","agree","agreeChange","firstNameChange","lastNameChange","ageChange","onBlurFirstName","onBlurLastName","onBlurAge","Number","placeholder","ProgressBar","renderSwitch","param","roundWidth","width","height","top","lineHeight","style","step","App","logged","login","logPassChange","paymentTypeChange","personalInfChange","newLogin","newPassword","newType","newFirstName","newLastName","newAge","components_ProgressBar","components_LoginPasswordForm","components_ChosePaymentType","components_PersonalDataForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e692e9d7.chunk.js","sourcesContent":["import React from 'react';\n\nclass LoginPasswordForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.usernameChange = this.usernameChange.bind(this);//Изменение логина в реальном времени\n    this.passwordChange = this.passwordChange.bind(this);//Изменение пароля в реальном времени\n    this.onBlurUsername = this.onBlurUsername.bind(this);//Обработчик события снятия фокуса с логина\n    this.onBlurPassword = this.onBlurPassword.bind(this);//Обработчик события снятия фокуса с пароля\n    this.handleSubmit = this.handleSubmit.bind(this);//Отправка формы\n  }\n\n  usernameChange(event) {\n    this.setState({username: event.target.value});\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  passwordChange(event) {\n    this.setState({password: event.target.value});\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onBlurUsername(event) {\n    if(this.state.username.length === 0){\n      alert(\"You dont input login\")\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  onBlurPassword(event) {\n    if((this.state.password.length <= 5)&&(this.state.password.length >=1)){\n      alert(\"Short password\")\n    }\n    if(this.state.password.length === 0){\n      alert(\"You dont input password\")\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  handleSubmit(event) {\n    if((this.state.password.length >= 5) && (this.state.username.length >=1)){\n      this.props.onChange(this.state.username, this.state.password);\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"registrationBlock\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <div>Username</div>\n              <input type=\"text\" value={this.state.username} onChange={this.usernameChange} onBlur={this.onBlurUsername}/><br/>\n            </label>\n            <label>\n              <div>Password</div>\n              <input type=\"text\" value={this.state.password} onChange={this.passwordChange} onBlur={this.onBlurPassword}/><br/>\n            </label>\n            <input type=\"submit\" value=\"Next step\" className=\"button\"/>\n          </form>\n          <div className=\"textBlock\">\n            Welcome to the team!<br/>\n            Please proceed the registration<br/>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default LoginPasswordForm;","import React from 'react';\n\nclass ChosePaymentType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentType: 'cash',\n      cash: true,\n      card: false\n    };\n\n    this.cashInputChange = this.cashInputChange.bind(this);//Изменение на тип наличные\n    this.cardInputChange = this.cardInputChange.bind(this);//Изменение на тип карта\n    this.handleSubmit = this.handleSubmit.bind(this);//Отправка формы\n  }\n\n  cashInputChange(event) {\n    this.setState({\n      paymentType: 'cash',\n      cash: true,\n      card: false\n    });\n  }\n  cardInputChange(event) {\n    this.setState({\n      paymentType: 'card',\n      cash: false,\n      card: true\n    });\n  }\n\n  handleSubmit(event) {\n    this.props.onChange(this.state.paymentType);\n    event.preventDefault();\n  }\n\n\n  render() {\n    return (\n        <div className=\"payTypeBlock\">\n          <form onSubmit={this.handleSubmit} className=\"paymentTypeForm\">\n            <div className=\"formNameText\">Chose payment type</div><br/>\n            <label className=\"radioButtons\">\n              <input\n                  name=\"Credit card\"\n                  type=\"radio\"\n                  checked={this.state.card}\n                  onChange={this.cardInputChange}\n                  className=\"radioButton\"\n                  id=\"cardRadio\"/>\n              <label htmlFor=\"radio2\"><label htmlFor=\"cardRadio\"></label></label>\n              <div>Credit card</div>\n            </label>\n            <br/>\n            <label className=\"radioButtons\">\n              <input\n                  name=\"Cash\"\n                  type=\"radio\"\n                  checked={this.state.cash}\n                  onChange={this.cashInputChange}\n                  className=\"radioButton\"\n                  id=\"cashRadio\"/>\n              <label htmlFor=\"radio1\"><label htmlFor=\"cashRadio\"></label></label>\n              <div>Cash</div>\n            </label>\n            <br/>\n            <input type=\"submit\" value=\"Next step\" className=\"button\"/>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default ChosePaymentType;","import React from 'react';\n\nclass PersonalDataForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      age: '',\n      agree: false\n    };\n\n    this.agreeChange = this.agreeChange.bind(this);//Изменение статуса согласия с правилами\n    this.firstNameChange = this.firstNameChange.bind(this);//Изменение имени в реальном времени\n    this.lastNameChange = this.lastNameChange.bind(this);//Изменение фамилии в реальном времени\n    this.ageChange = this.ageChange.bind(this);//Изменение возраста в реальном времени\n    this.onBlurFirstName = this.onBlurFirstName.bind(this);//Обработчик события снятия фокуса с имени\n    this.onBlurLastName = this.onBlurLastName.bind(this);//Обработчик события снятия фокуса с фамилии\n    this.onBlurAge = this.onBlurAge.bind(this);//Обработчик события снятия фокуса с возраста\n    this.handleSubmit = this.handleSubmit.bind(this);//Отправка формы\n  }\n\n  agreeChange(event) {\n    if(this.state.agree){\n      this.setState({\n        agree: false\n      });\n    }else{\n      this.setState({\n        agree: true\n\n      });\n    }\n  }\n  firstNameChange(event) {\n    this.setState({firstName: event.target.value});\n  }\n  lastNameChange(event) {\n    this.setState({lastName: event.target.value});\n  }\n  ageChange(event) {\n    if(Number(event.target.value)){\n      this.setState({age: event.target.value});\n    }\n  }\n\n  onBlurFirstName(event) {\n    if(this.state.firstName.length === 0){\n      alert(\"You dont input First Name\")\n    }\n    event.preventDefault();\n  }\n  onBlurLastName(event) {\n    if(this.state.lastName.length === 0){\n      alert(\"You dont input Last name\")\n    }\n  }\n  onBlurAge(event) {\n    if(this.state.lastName.length === 0){\n      alert(\"You dont input Last name\")\n    }\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    if(this.state.agree && this.state.firstName && this.state.lastName && this.state.age){\n      this.props.onChange(this.state.firstName, this.state.lastName, this.state.age);\n    }else{\n      alert(\"Your not agree or dont input data\");\n    }\n    event.preventDefault();\n  }\n\n\n  render() {\n    return (\n        <div className='personalData'>\n          <div className=\"nameLabelText\">Enter your personal data</div><br/>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"inputBlock\">\n              <label>\n                <div>First name</div>\n                <input type=\"text\" value={this.state.firstName} onChange={this.firstNameChange} onBlur={this.onBlurFirstName}/><br/>\n              </label>\n              <label>\n                <div>Last name</div>\n                <input type=\"text\" value={this.state.lastName} onChange={this.lastNameChange} onBlur={this.onBlurLastName}/><br/>\n              </label>\n              <label>\n                <div>Age</div>\n                <input type=\"text\" value={this.state.age} onChange={this.ageChange} onBlur={this.onBlurAge} placeholder={\"only numbers\"}/><br/>\n              </label>\n            </div>\n            <div className=\"agreeBlock\">\n              <label>\n                <input name=\"agree\" type=\"checkbox\" checked={this.state.agree} onChange={this.agreeChange} />\n                Accept terms and conditions\n              </label><br/>\n              <input type=\"submit\" value=\"Register\" className=\"button\"/>\n            </div>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default PersonalDataForm;\n","import React from 'react';\n\nclass ProgressBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.renderSwitch = this.renderSwitch.bind(this);//Выбор того как рендерить статус бар в зависимости от шага\n    }\n\n\n    renderSwitch(param) {\n        var roundWidth = {width: '35px', height: '35px', top: '60px', lineHeight: '33px'};\n        switch (param) {\n            case 1:\n                return (\n                    <div className=\"progressBarBlock\">\n                        <div className=\"progressPointFirst\" style={roundWidth}>1</div>\n                        <div className=\"progressPointSecond\">2</div>\n                        <div className=\"progressPointThird\">3</div>\n                        <hr className=\"lineCenter\"/>\n                    </div>\n                );\n            case 2:\n                return (\n                    <div className=\"progressBarBlock\">\n                        <div className=\"progressPointFirst\">1</div>\n                        <div className=\"progressPointSecond\" style={roundWidth}>2</div>\n                        <div className=\"progressPointThird\">3</div>\n                        <hr className=\"lineCenter\"/>\n                    </div>\n                );\n            case 3:\n                return (\n                    <div className=\"progressBarBlock\">\n                        <div className=\"progressPointFirst\">1</div>\n                        <div className=\"progressPointSecond\">2</div>\n                        <div className=\"progressPointThird\" style={roundWidth}>3</div>\n                        <hr className=\"lineCenter\"/>\n                    </div>\n                );\n            default:\n                return (\n                    <h1>Something going wrong!</h1>\n                );\n        }\n    }\n\n    render() {\n        return (\n            this.renderSwitch(this.props.step)\n        );\n    }\n}\nexport default ProgressBar;\n","import React,{Component} from 'react';\n\nimport './css/styleApp.css';\n\nimport LoginPasswordForm from './components/LoginPasswordForm.js';\nimport ChosePaymentType from './components/ChosePaymentType.js';\nimport PersonalDataForm from './components/PersonalDataForm.js';\nimport ProgressBar from './components/ProgressBar.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged: 1,\n      login : \"\",\n      password: \"\",\n      paymentType: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\"\n    };\n    this.logPassChange = this.logPassChange.bind(this);//изменение значения пароля и логина\n    this.paymentTypeChange = this.paymentTypeChange.bind(this);//изменение значения типа оплаты\n    this.personalInfChange = this.personalInfChange.bind(this);//изменение значений личных данных\n  }\n\n  logPassChange(newLogin, newPassword) {\n    this.setState({logged: 2, login: newLogin, password : newPassword});\n  }\n\n  paymentTypeChange(newType) {\n    this.setState({logged: 3, paymentType: newType});\n  }\n\n  personalInfChange(newFirstName,newLastName,newAge) {\n    this.setState({logged: 4, age: newAge, firstName: newFirstName, lastName: newLastName});\n  }\n  render() {\n    if (this.state.logged === 1) {\n      return (\n          <div className=\"mainFrame\">\n            <div className=\"registrationNameText\">Registration</div>\n            <div>\n              <ProgressBar step = {this.state.logged}/>\n              <LoginPasswordForm onChange={this.logPassChange} />\n            </div>\n          </div>\n      );\n    }\n    if (this.state.logged === 2){\n      return (\n          <div className=\"mainFrame\">\n            <div className=\"registrationNameText\">Registration</div>\n            <div>\n              <ProgressBar step = {this.state.logged}/>\n              <ChosePaymentType onChange={this.paymentTypeChange}/>\n            </div>\n          </div>\n      );\n    }\n    if (this.state.logged === 3){\n      return (\n          <div className=\"mainFrame\">\n            <div className=\"registrationNameText\">Registration</div>\n            <div>\n              <ProgressBar step = {this.state.logged}/>\n              <PersonalDataForm onChange={this.personalInfChange}/>\n            </div>\n          </div>\n      );\n    }\n    return (\n        <div className=\"mainFrame\">\n          <div className=\"resultBlock\">\n            <div className=\"nameText\">Congratulations! You've successfully registered</div><br/>\n            <div className=\"nameLabelText\">Provided data</div><br/>\n            <table>\n              <tbody>\n              <tr>\n                <td>Username:</td>\n                <td>{this.state.login}</td>\n              </tr>\n              <tr>\n                <td>First name:</td>\n                <td>{this.state.firstName}</td>\n              </tr>\n              <tr>\n                <td>Last name:</td>\n                <td>{this.state.lastName}</td>\n              </tr>\n              <tr>\n                <td>Age:</td>\n                <td>{this.state.age}</td>\n              </tr>\n              <tr>\n                <td>Payment method:</td>\n                <td>{this.state.paymentType}</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}